{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\codeGeek\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useRef, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar fields = ['firstname', 'lastname', 'email id', 'mobile number', 'password'];\nexport default function App() {\n  var _this = this;\n\n  var valuee = useState(new Animated.ValueXY({\n    x: 200,\n    y: 500\n  }))[0];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ViewRefs = _React$useState2[0],\n      setv = _React$useState2[1];\n\n  var _useState = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobileno: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var i = 0;\n\n  while (i < fields.length) {\n    if (i == 0) {\n      ViewRefs.current[i] = new Animated.Value(1);\n      ViewRefs.current[(i + 1) * 858] = new Animated.ValueXY({\n        x: 400,\n        y: 10\n      });\n      ViewRefs.current[(i + 8) * 858] = new Animated.Value(1);\n    } else {\n      ViewRefs.current[i] = new Animated.Value(0);\n      ViewRefs.current[(i + 1) * 858] = new Animated.ValueXY({\n        x: 400,\n        y: 10\n      });\n      ViewRefs.current[(i + 8) * 858] = new Animated.Value(1);\n    }\n\n    i++;\n  }\n\n  console.log(ViewRefs);\n  var curr_i = 0;\n\n  function moveText() {\n    console.log(ViewRefs.current[curr_i]);\n\n    if (ViewRefs.current[curr_i].current.value != \"\") {\n      console.log(data);\n      var index = curr_i;\n\n      if (index < fields.length) {\n        Animated.timing(ViewRefs.current[(index + 8) * 858], {\n          toValue: 0.8,\n          duration: 2000,\n          useNativeDriver: false\n        }).start();\n      }\n\n      Animated.timing(ViewRefs.current[(index + 1) * 858], {\n        toValue: {\n          x: 400,\n          y: 150\n        },\n        duration: 2000,\n        useNativeDriver: false\n      }).start(function () {\n        if (index < fields.length - 1) {\n          Animated.timing(ViewRefs.current[index + 1], {\n            toValue: 1,\n            duration: 3000,\n            useNativeDriver: false\n          }).start();\n        }\n      });\n      curr_i++;\n    } else {}\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, fields.map(function (a, index) {\n    return React.createElement(Animated.View, {\n      key: index,\n      style: {\n        left: ViewRefs.current[(index + 1) * 858].x,\n        bottom: ViewRefs.current[(index + 1) * 858].y,\n        opacity: ViewRefs.current[index],\n        transform: [{\n          scaleY: ViewRefs.current[(index + 8) * 858]\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      placeholder: fields[index],\n      name: fields[index],\n      onChange: function onChange(e) {\n        return setData(_objectSpread(_objectSpread({}, data), {}, _defineProperty({}, e.target.placeholder, e.target.value)));\n      },\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        width: \"20%\",\n        border: \"none\",\n        borderBottom: \"1px solid black\",\n        outline: \"none\"\n      },\n      ref: ViewRefs.current[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }));\n  }), error && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }\n  }, error), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return moveText();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 56\n    }\n  }, \"Click me\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    overflow: \"scroll\",\n    textAlign: \"center\",\n    height: \"100%\",\n    textAlignVertical: \"middle\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/codeGeek/App.js"],"names":["StatusBar","React","useState","useRef","createRef","fields","App","valuee","Animated","ValueXY","x","y","ViewRefs","setv","firstname","lastname","email","mobileno","password","data","setData","error","setError","i","length","current","Value","console","log","curr_i","moveText","value","index","timing","toValue","duration","useNativeDriver","start","styles","container","map","a","left","bottom","opacity","transform","scaleY","e","target","placeholder","height","borderColor","width","border","borderBottom","outline","StyleSheet","create","overflow","textAlign","textAlignVertical","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState,useRef, createRef} from 'react';\nimport { StyleSheet, Text,TextInput, View,Animated,TouchableOpacity } from 'react-native';\nconst fields = ['firstname', 'lastname', 'email id', 'mobile number','password'];\nexport default function App() {\n  const valuee = useState(new Animated.ValueXY({ x: 200, y: 500 }))[0];\n  const [ViewRefs,setv] = React.useState([]);\n  const [data, setData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    mobileno: \"\",\n    password:\"\"\n    })\n   const [error, setError] = useState();\n  var i = 0;\n  while (i < fields.length) {\n    if (i == 0) {\n      ViewRefs.current[i]=(new Animated.Value(1))\n      ViewRefs.current[(i + 1) * 858] = (new Animated.ValueXY({ x: 400, y:10 }))\n      ViewRefs.current[(i+8)*858]=(new Animated.Value(1))\n    } else {\n      ViewRefs.current[i]=(new Animated.Value(0))\n      ViewRefs.current[(i + 1) * 858] = (new Animated.ValueXY({ x: 400, y: 10 }))\n      ViewRefs.current[(i+8)*858]=(new Animated.Value(1))\n    }\n    i++;\n  }\n\n  console.log(ViewRefs)\n  \n  \n  var curr_i = 0;\n  function moveText() {\n  \n    console.log(ViewRefs.current[curr_i])\n    if (ViewRefs.current[curr_i].current.value != \"\") {\n      console.log(data)\n      \n    \n      var index = curr_i\n      if (index < fields.length) {\n        Animated.timing(ViewRefs.current[(index +8) * 858], {\n          toValue: 0.8,\n          duration: 2000,\n          useNativeDriver: false\n        }).start()\n      }\n      Animated.timing(ViewRefs.current[(index + 1) * 858], {\n      \n        toValue: { x: 400, y: 150 },\n        duration: 2000,\n        useNativeDriver: false\n      }).start(() => {\n        \n        if (index < fields.length - 1) {\n          Animated.timing(ViewRefs.current[index + 1], {\n            toValue: 1,\n            duration: 3000,\n            useNativeDriver: false\n          }).start()\n        }\n      })\n    \n\n     \n   \n      curr_i++;\n    } else {\n      //setError(\"Please enter the required field\")\n    }\n  }\n  \n  return (\n \n    <View style={styles.container}>\n      {\n        fields.map((a, index) => (\n          <Animated.View\n            key={index}\n            style={{\n          \n              left: ViewRefs.current[(index + 1) * 858].x, bottom: ViewRefs.current[(index + 1) * 858].y,\n              opacity: ViewRefs.current[index],\n              transform: [\n                {\n                  scaleY:ViewRefs.current[(index +8) * 858]\n                }\n              ]\n            }}\n        >\n          <TextInput \n              placeholder={fields[index]}\n              name={fields[index]}\n             onChange={e=>setData({...data,[e.target.placeholder]:e.target.value})}\n            style={{height: 40, borderColor: 'gray', width:\"20%\", border:\"none\",borderBottom:\"1px solid black\",outline:\"none\" }}\n            ref={ViewRefs.current[index]}\n          />\n          </Animated.View>\n       \n          \n \n  ))\n      }\n         {error && <Text>{error}</Text>}\n       <TouchableOpacity  onPress={() => moveText()}  ><Text>Click me</Text></TouchableOpacity>\n         </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    overflow:\"scroll\",\n    textAlign: \"center\",\n    height: \"100%\",\n    textAlignVertical:\"middle\",\n    justifyContent:\"center\"\n  },\n});\n"]},"metadata":{},"sourceType":"module"}