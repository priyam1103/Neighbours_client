{"ast":null,"code":"var _jsxFileName = \"F:\\\\codeGeek\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useRef, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar fields = ['firstname', 'lastname', 'email', 'mobileno'];\nexport default function App() {\n  var _this = this;\n\n  var valuee = useState(new Animated.ValueXY({\n    x: 200,\n    y: 500\n  }))[0];\n  var ViewRefs = React.useRef([]);\n  var i = 0;\n\n  while (i < fields.length) {\n    if (i == 0) {\n      ViewRefs.current[i] = new Animated.Value(1);\n      ViewRefs.current[(i + 1) * 858] = new Animated.ValueXY({\n        x: 0,\n        y: parseInt(i + \"00\")\n      });\n    } else {\n      ViewRefs.current[i] = new Animated.Value(0);\n      ViewRefs.current[(i + 1) * 858] = new Animated.ValueXY({\n        x: 0,\n        y: parseInt(i + \"00\")\n      });\n    }\n\n    i++;\n  }\n\n  console.log(ViewRefs);\n  var fade = useRef(new Animated.Value(0)).current;\n\n  function moveText(index) {\n    console.log(fade);\n    console.log(index);\n    Animated.timing(ViewRefs.current[(index + 1) * 858], {\n      toValue: {\n        x: 0,\n        y: parseInt(i + \"00\")\n      },\n      duration: 2000,\n      useNativeDriver: false\n    }).start();\n\n    if (index < fields.length - 1) {\n      Animated.timing(ViewRefs.current[index + 1], {\n        toValue: 1,\n        duration: 3000,\n        useNativeDriver: false\n      }).start();\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, fields.map(function (a, index) {\n    return React.createElement(Animated.Text, {\n      key: index,\n      onPress: function onPress() {\n        return moveText(index);\n      },\n      style: {\n        position: \"relative\",\n        left: ViewRefs.current[(index + 1) * 858].x,\n        bottom: ViewRefs.current[(index + 1) * 858].y,\n        opacity: ViewRefs.current[index]\n      },\n      ref: ViewRefs.current[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, ViewRefs.current[(index + 1) * 858].y._value);\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    textAlign: \"center\",\n    height: \"100%\",\n    textAlignVertical: \"middle\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/codeGeek/App.js"],"names":["StatusBar","React","useState","useRef","createRef","fields","App","valuee","Animated","ValueXY","x","y","ViewRefs","i","length","current","Value","parseInt","console","log","fade","moveText","index","timing","toValue","duration","useNativeDriver","start","styles","container","map","a","position","left","bottom","opacity","_value","StyleSheet","create","textAlign","height","textAlignVertical","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,EAA+BC,SAA/B,QAA+C,OAA/C;;;;;;AAEA,IAAMC,MAAM,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,OAA1B,EAAmC,UAAnC,CAAf;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,MAAMC,MAAM,GAAGL,QAAQ,CAAC,IAAIM,QAAQ,CAACC,OAAb,CAAqB;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb,GAArB,CAAD,CAAR,CAAmD,CAAnD,CAAf;AACA,MAAMC,QAAQ,GAAGX,KAAK,CAACE,MAAN,CAAa,EAAb,CAAjB;AAMA,MAAIU,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGR,MAAM,CAACS,MAAlB,EAA0B;AACxB,QAAID,CAAC,IAAI,CAAT,EAAY;AACVD,MAAAA,QAAQ,CAACG,OAAT,CAAiBF,CAAjB,IAAqB,IAAIL,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAArB;AACAJ,MAAAA,QAAQ,CAACG,OAAT,CAAiB,CAACF,CAAC,GAAC,CAAH,IAAM,GAAvB,IAA6B,IAAIL,QAAQ,CAACC,OAAb,CAAqB;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAEM,QAAQ,CAACJ,CAAC,GAAC,IAAH;AAAnB,OAArB,CAA7B;AACD,KAHD,MAGO;AACLD,MAAAA,QAAQ,CAACG,OAAT,CAAiBF,CAAjB,IAAqB,IAAIL,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAArB;AACAJ,MAAAA,QAAQ,CAACG,OAAT,CAAiB,CAACF,CAAC,GAAC,CAAH,IAAM,GAAvB,IAA6B,IAAIL,QAAQ,CAACC,OAAb,CAAqB;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAGM,QAAQ,CAACJ,CAAC,GAAC,IAAH;AAApB,OAArB,CAA7B;AACD;;AACDA,IAAAA,CAAC;AACF;;AAEDK,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,MAAMQ,IAAI,GAAGjB,MAAM,CAAC,IAAIK,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BD,OAA3C;;AACA,WAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACCd,IAAAA,QAAQ,CAACe,MAAT,CAAgBX,QAAQ,CAACG,OAAT,CAAiB,CAACO,KAAK,GAAC,CAAP,IAAU,GAA3B,CAAhB,EAAiD;AAChDE,MAAAA,OAAO,EAAE;AAAEd,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAEM,QAAQ,CAACJ,CAAC,GAAC,IAAH;AAAnB,OADuC;AAEhDY,MAAAA,QAAQ,EAAE,IAFsC;AAGhDC,MAAAA,eAAe,EAAE;AAH+B,KAAjD,EAIGC,KAJH;;AAKD,QAAIL,KAAK,GAAGjB,MAAM,CAACS,MAAP,GAAc,CAA1B,EAA6B;AAC3BN,MAAAA,QAAQ,CAACe,MAAT,CAAgBX,QAAQ,CAACG,OAAT,CAAiBO,KAAK,GAAG,CAAzB,CAAhB,EAA6C;AAC3CE,QAAAA,OAAO,EAAE,CADkC;AAE3CC,QAAAA,QAAQ,EAAE,IAFiC;AAG3CC,QAAAA,eAAe,EAAE;AAH0B,OAA7C,EAIGC,KAJH;AAKD;AACF;;AA8BD,SAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIxB,MAAM,CAACyB,GAAP,CAAW,UAACC,CAAD,EAAIT,KAAJ;AAAA,WAET,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,OAAO,EAAE;AAAA,eAAMD,QAAQ,CAACC,KAAD,CAAd;AAAA,OAApC;AAA2D,MAAA,KAAK,EAAE;AAACU,QAAAA,QAAQ,EAAC,UAAV;AAAqBC,QAAAA,IAAI,EAACrB,QAAQ,CAACG,OAAT,CAAiB,CAACO,KAAK,GAAC,CAAP,IAAU,GAA3B,EAAgCZ,CAA1D;AAA4DwB,QAAAA,MAAM,EAACtB,QAAQ,CAACG,OAAT,CAAiB,CAACO,KAAK,GAAC,CAAP,IAAU,GAA3B,EAAgCX,CAAnG;AAAqGwB,QAAAA,OAAO,EAACvB,QAAQ,CAACG,OAAT,CAAiBO,KAAjB;AAA7G,OAAlE;AAAyM,MAAA,GAAG,EAAEV,QAAQ,CAACG,OAAT,CAAiBO,KAAjB,CAA9M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwOV,QAAQ,CAACG,OAAT,CAAiB,CAACO,KAAK,GAAC,CAAP,IAAU,GAA3B,EAAgCX,CAAhC,CAAkCyB,MAA1Q,CAFS;AAAA,GAAX,CAFJ,CAhBF;AA2BD;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,iBAAiB,EAAC,QAHT;AAITC,IAAAA,cAAc,EAAC;AAJN;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState,useRef, createRef} from 'react';\nimport { StyleSheet, Text, View,Animated,TouchableOpacity } from 'react-native';\nconst fields = ['firstname', 'lastname', 'email', 'mobileno'];\nexport default function App() {\n  //const value = useRef(new Animated.ValueXY({ x: 200, y: 500 })).current;\n  const valuee = useState(new Animated.ValueXY({ x: 200, y: 500 }))[0];\n  const ViewRefs = React.useRef([]);\n  //ViewRefs.current=[];\n  // if (ViewRefs.current.length != fields.length) {\n  //   ViewRefs.current = fields.map((_, i) =>createRef(new Animated.Value(0)))\n    \n  // }\n  var i = 0;\n  while (i < fields.length) {\n    if (i == 0) {\n      ViewRefs.current[i]=(new Animated.Value(1))\n      ViewRefs.current[(i+1)*858]=(new Animated.ValueXY({ x: 0, y: parseInt(i+\"00\")}))\n    } else {\n      ViewRefs.current[i]=(new Animated.Value(0))\n      ViewRefs.current[(i+1)*858]=(new Animated.ValueXY({ x: 0, y:  parseInt(i+\"00\") }))\n    }\n    i++;\n  }\n\n  console.log(ViewRefs)\n  \n  const fade = useRef(new Animated.Value(0)).current;\n  function moveText(index) {\n    console.log(fade)\n    console.log(index)\n     Animated.timing(ViewRefs.current[(index+1)*858], {\n      toValue: { x: 0, y: parseInt(i+\"00\") },\n      duration: 2000,\n      useNativeDriver: false\n     }).start()\n    if (index < fields.length-1) {\n      Animated.timing(ViewRefs.current[index + 1], {\n        toValue: 1,\n        duration: 3000,\n        useNativeDriver: false\n      }).start()\n    }\n  }\n  // function moveText() {\n  //   const y = value.y\n  //   console.log(y)\n  //   if (value.y==150) {\n  //     console.log(value.y)\n  //     Animated.timing(fade, {\n  //       toValue: 0,\n  //       duration: 1000,\n  //       useNativeDriver: false\n  //     }).start()\n  //     Animated.timing(value, {\n  //       toValue: { x: 200, y: 500 },\n  //       duration: 2000,\n  //       useNativeDriver: false\n  //     }).start()\n    \n  //   } else {\n  //     Animated.timing(value, {\n  //       toValue: { x: 200, y: 150 },\n  //       duration: 1000,\n  //       useNativeDriver: false\n  //     }).start()\n  //     Animated.timing(fade, {\n  //       toValue: 1,\n  //       duration: 2000,\n  //       useNativeDriver: false\n  //     }).start()\n  //   }\n  // }\n  return (\n    // <View style={styles.container}>\n    //   <Animated.View >\n     \n    //     {fields.map((el, i) => (\n    //     <View key={i}>\n    //      <TouchableOpacity onPress={moveText}>\n    //     <Text ref={ViewRefs.current[i]} style={{opacity:ViewRefs.current[i]}}>{el}</Text>\n    //         </TouchableOpacity>\n    //         </View>\n    //   ))}\n          \n    //     </Animated.View>\n      \n    // </View>\n \n    <View style={styles.container}>\n      {\n        fields.map((a, index) => (\n          \n          <Animated.Text key={index} onPress={() => moveText(index)} style={{position:\"relative\",left:ViewRefs.current[(index+1)*858].x,bottom:ViewRefs.current[(index+1)*858].y,opacity:ViewRefs.current[index]}} ref={ViewRefs.current[index]}>{ViewRefs.current[(index+1)*858].y._value}</Animated.Text>\n          \n \n  ))\n      }\n         </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    textAlign: \"center\",\n    height: \"100%\",\n    textAlignVertical:\"middle\",\n    justifyContent:\"center\"\n  },\n});\n"]},"metadata":{},"sourceType":"module"}