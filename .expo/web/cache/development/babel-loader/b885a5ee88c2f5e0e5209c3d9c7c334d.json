{"ast":null,"code":"var _jsxFileName = \"F:\\\\codeGeek\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useRef, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar fields = ['firstname', 'lastname', 'email', 'mobileno'];\nexport default function App() {\n  var _this = this;\n\n  var valuee = useState(new Animated.ValueXY({\n    x: 200,\n    y: 500\n  }))[0];\n  var ViewRefs = React.useRef([]);\n\n  var makeRef = function makeRef(el) {\n    if (ViewRefs.current.length < fields.length) ViewRefs.current.push(new Animated.Value(0));\n    console.log(ViewRefs.current);\n  };\n\n  var fade = useRef(new Animated.Value(0)).current;\n\n  function moveText() {\n    var y = value.y;\n    console.log(y);\n\n    if (value.y == 150) {\n      console.log(value.y);\n      Animated.timing(fade, {\n        toValue: 0,\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n      Animated.timing(value, {\n        toValue: {\n          x: 200,\n          y: 500\n        },\n        duration: 2000,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(value, {\n        toValue: {\n          x: 200,\n          y: 150\n        },\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n      Animated.timing(fade, {\n        toValue: 1,\n        duration: 2000,\n        useNativeDriver: false\n      }).start();\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, fields.map(function (a) {\n    return React.createElement(Text, {\n      key: a,\n      ref: makeRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }\n    }, a);\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    textAlign: \"center\",\n    height: \"100%\",\n    textAlignVertical: \"middle\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["F:/codeGeek/App.js"],"names":["StatusBar","React","useState","useRef","createRef","fields","App","valuee","Animated","ValueXY","x","y","ViewRefs","makeRef","el","current","length","push","Value","console","log","fade","moveText","value","timing","toValue","duration","useNativeDriver","start","styles","container","map","a","StyleSheet","create","textAlign","height","textAlignVertical","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState,useRef, createRef} from 'react';\nimport { StyleSheet, Text, View,Animated,TouchableOpacity } from 'react-native';\nconst fields = ['firstname', 'lastname', 'email', 'mobileno'];\nexport default function App() {\n  //const value = useRef(new Animated.ValueXY({ x: 200, y: 500 })).current;\n  const valuee = useState(new Animated.ValueXY({ x: 200, y: 500 }))[0];\n  const ViewRefs = React.useRef([]);\n  //ViewRefs.current=[];\n  // if (ViewRefs.current.length != fields.length) {\n  //   ViewRefs.current = fields.map((_, i) =>createRef(new Animated.Value(0)))\n    \n  // }\n  const makeRef = (el) => {\n  if(ViewRefs.current.length<fields.length)\n    ViewRefs.current.push(new Animated.Value(0))\n   console.log(ViewRefs.current)\n  }\n  \n  const fade = useRef(new Animated.Value(0)).current;\n\n  function moveText() {\n    const y = value.y\n    console.log(y)\n    if (value.y==150) {\n      console.log(value.y)\n      Animated.timing(fade, {\n        toValue: 0,\n        duration: 1000,\n        useNativeDriver: false\n      }).start()\n      Animated.timing(value, {\n        toValue: { x: 200, y: 500 },\n        duration: 2000,\n        useNativeDriver: false\n      }).start()\n    \n    } else {\n      Animated.timing(value, {\n        toValue: { x: 200, y: 150 },\n        duration: 1000,\n        useNativeDriver: false\n      }).start()\n      Animated.timing(fade, {\n        toValue: 1,\n        duration: 2000,\n        useNativeDriver: false\n      }).start()\n    }\n  }\n  return (\n    // <View style={styles.container}>\n    //   <Animated.View >\n     \n    //     {fields.map((el, i) => (\n    //     <View key={i}>\n    //      <TouchableOpacity onPress={moveText}>\n    //     <Text ref={ViewRefs.current[i]} style={{opacity:ViewRefs.current[i]}}>{el}</Text>\n    //         </TouchableOpacity>\n    //         </View>\n    //   ))}\n          \n    //     </Animated.View>\n      \n    // </View>\n \n    <View style={styles.container}> \n       {\n        fields.map((a) => (<Text key={a} ref={makeRef}>{a}</Text>))}\n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    textAlign: \"center\",\n    height: \"100%\",\n    textAlignVertical:\"middle\",\n    justifyContent:\"center\"\n  },\n});\n"]},"metadata":{},"sourceType":"module"}