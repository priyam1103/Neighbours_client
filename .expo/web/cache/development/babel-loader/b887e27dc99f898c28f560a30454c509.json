{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\codeGeek\\\\screens\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Feather } from '@expo/vector-icons';\nvar fields = ['firstname', 'email', 'mobileno'];\nvar screen = Dimensions.get(\"window\");\nvar setX = screen.width / 2 - 145;\nvar i = 0;\nvar cur = 0;\nvar setY = screen.height / 2 - 80;\nexport default function Login(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var ViewRefs = React.useRef([]);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      curr_i = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = useState({\n    firstname: \"\",\n    email: \"\",\n    mobileno: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  while (i < fields.length) {\n    if (i == 0) {\n      ViewRefs.current[i] = new Animated.Value(1);\n    } else {\n      ViewRefs.current[i] = new Animated.Value(0);\n    }\n\n    i++;\n  }\n\n  function moveText() {\n    console.log(data);\n\n    if (ViewRefs.current[cur] != undefined) {\n      console.log(ViewRefs.current[cur]);\n      Animated.timing(ViewRefs.current[cur], {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: false\n      }).start();\n      cur++;\n    } else {\n      setError(null);\n      console.log(data);\n\n      if (data.firstname != \"\" && data.email != \"\" && data.mobileno != \"\") {\n        console.log(data);\n        navigation.navigate(\"Home\");\n      } else {\n        setError(\"please enter all details\");\n      }\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, fields.map(function (a, index) {\n    return React.createElement(Animated.View, {\n      key: index,\n      style: {\n        left: setX,\n        opacity: ViewRefs.current[index]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      placeholder: fields[index],\n      ref: ViewRefs.current[index],\n      name: fields[index],\n      onChangeText: function onChangeText(text) {\n        return setData(_objectSpread(_objectSpread({}, data), {}, _defineProperty({}, fields[index], text)));\n      },\n      style: {\n        height: 40,\n        marginTop: \"10%\",\n        borderColor: 'gray',\n        width: \"60%\",\n        borderBottomWidth: 1,\n        borderColor: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }));\n  }), error && React.createElement(Text, {\n    style: {\n      left: screen.width / 2 - 70,\n      marginTop: \"10%\",\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }\n  }, error), React.createElement(TouchableOpacity, {\n    style: {\n      left: screen.width / 2 - 30,\n      marginTop: \"30%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Feather, {\n    onPress: function onPress() {\n      return moveText();\n    },\n    name: \"arrow-right\",\n    size: 54,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    overflow: \"scroll\",\n    textAlign: \"center\",\n    height: \"100%\",\n    marginTop: \"40%\"\n  }\n});","map":{"version":3,"sources":["F:/codeGeek/screens/Login.js"],"names":["React","useState","useRef","createRef","Feather","fields","screen","Dimensions","get","setX","width","i","cur","setY","height","Login","navigation","ViewRefs","curr_i","setCurrent","firstname","email","mobileno","data","setData","error","setError","length","current","Animated","Value","moveText","console","log","undefined","timing","toValue","duration","useNativeDriver","start","navigate","styles","container","map","a","index","left","opacity","text","marginTop","borderColor","borderBottomWidth","color","StyleSheet","create","overflow","textAlign"],"mappings":"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","sourcesContent":["import React,{useState,useRef, createRef} from 'react';\r\nimport { StyleSheet, Text, TextInput,KeyboardAvoidingView, View, Animated, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons'; \r\nconst fields = ['firstname', 'email', 'mobileno'];\r\nconst screen = Dimensions.get(\"window\");\r\nvar setX = (screen.width / 2) - 145;\r\nvar i = 0;\r\nvar cur = 0;\r\nvar setY = (screen.height/2)-80\r\nexport default function Login ({navigation}){\r\n  \r\n  const ViewRefs = React.useRef([]);\r\n  const [curr_i, setCurrent] = useState(0);\r\n  const [data, setData] = useState({\r\n    firstname: \"\",\r\n    email: \"\",\r\n    mobileno: \"\",\r\n  \r\n    })\r\n   const [error, setError] = useState();\r\n while (i < fields.length) {\r\n    if (i == 0) {\r\n      ViewRefs.current[i]=(new Animated.Value(1))\r\n    \r\n     \r\n    } else {\r\n      ViewRefs.current[i]=(new Animated.Value(0))\r\n     \r\n     \r\n    }\r\n    i++;\r\n  }\r\n  \r\n\r\n  function moveText() {\r\nconsole.log(data)\r\n      \r\n    if (ViewRefs.current[cur]!=undefined) {\r\n\r\n     // ViewRefs.current[index] = 1;\r\n      console.log(ViewRefs.current[cur])\r\n     \r\n          \r\n            Animated.timing(ViewRefs.current[cur], {\r\n              toValue: 1,\r\n              duration: 800,\r\n              useNativeDriver: false\r\n            }).start()\r\n            \r\n      cur++\r\n        \r\n      \r\n //  setCurrent(curr_i+1);\r\n    } else {\r\n      \r\n      setError(null)\r\n      console.log(data)\r\n      if (data.firstname != \"\" && data.email != \"\" && data.mobileno != \"\") {\r\n          console.log(data)\r\n          navigation.navigate(\"Home\")\r\n      } else {\r\n        setError(\"please enter all details\")\r\n      }\r\n  \r\n    }\r\n  }\r\n  \r\n  return (\r\n   \r\n    <View style={styles.container}>\r\n      { \r\n        fields.map((a, index) => (\r\n          <Animated.View\r\n            key={index}\r\n            style={{\r\n          \r\n              left: setX,\r\n              opacity: ViewRefs.current[index],\r\n\r\n                            \r\n            }}\r\n        >\r\n          <TextInput \r\n              placeholder={fields[index]}\r\n              ref={ViewRefs.current[index]}\r\n              name={fields[index]}\r\n              onChangeText={text => setData({ ...data, [fields[index]]: text })}\r\n           //  onChange={e=>setData({...data,[fields[index]]:e.target.value})}\r\n            style={{height: 40,marginTop:\"10%\", borderColor: 'gray', width:\"60%\",borderBottomWidth: 1,\r\n              borderColor: \"black\",\r\n            }}\r\n              \r\n          \r\n          />\r\n          </Animated.View>\r\n       \r\n          \r\n \r\n  ))\r\n      }\r\n         {error && <Text style={{ left: (screen.width / 2)-70,marginTop:\"10%\",color:\"red\" }}>{error}</Text>}\r\n      <TouchableOpacity style={{ left: (screen.width / 2)-30,marginTop:\"30%\", }}  >\r\n        <Feather onPress={() => moveText()} name=\"arrow-right\" size={54} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    overflow:\"scroll\",\r\n    textAlign: \"center\",\r\n    height: \"100%\",\r\n    marginTop:\"40%\",\r\n        \r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}